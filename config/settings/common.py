"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 2.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""
import environ
import os
from django.urls import reverse_lazy

#
env = environ.Env()
env.read_env()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
ROOT_DIR = environ.Path(__file__) - 3

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '_&d-*aab#^cy-x^s-xyi!jnef8*m2(-%!vc42vn1_)^=p7!mkj'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

DJANGO_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'django_filters',
)


THIRD_PARTY_APPS = (
    'rest_framework',

    # Auth
    'rest_framework.authtoken',
    'oauth2_provider',
    'rest_auth',

    # Registration
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'rest_auth.registration',

    # CORS
    'corsheaders',

    # Swagger
    'drf_yasg',

    # Celery
    'django_celery_beat',
    'django_celery_results',

    # storages
    'storages',
)

# Apps specific for this project go here.
LOCAL_APPS = (
    'app.core.apps.CoreConfig',
    'app.users.apps.UserConfig',
    'app.category.apps.CategoryConfig',
    'app.product.apps.ProductConfig',
)

INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + LOCAL_APPS

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'oauth2_provider.middleware.OAuth2TokenMiddleware',

    'app.core.context.AppContextMiddleware',
]


# Registration
SITE_ID = 1
ACCOUNT_EMAIL_VERIFICATION = env('ACCOUNT_EMAIL_VERIFICATION', default='None')
ACCOUNT_USERNAME_REQUIRED = False


AUTHENTICATION_BACKENDS = (
    'oauth2_provider.backends.OAuth2Backend',
    # Uncomment following if you want to access the admin
    'django.contrib.auth.backends.ModelBackend'
)


# Auth model
AUTH_USER_MODEL = 'users.User'

# Route
ROOT_URLCONF = 'config.urls'

# Template
TEMPLATES_ROOT = str(ROOT_DIR('templates'))
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_ROOT],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': env.db('DATABASE_URL', default='postgres://goldfish@postgres:123456/goldfish'),
}
DATABASES['default']['ATOMIC_REQUESTS'] = True


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

# STATIC FILE CONFIGURATION
# ------------------------------------------------------------------------------
# See: https://docs.djangoproject.com/en/dev/ref/settings/#static-root
STATIC_ROOT = str(ROOT_DIR('staticfiles'))

# See: https://docs.djangoproject.com/en/dev/ref/settings/#static-url
STATIC_URL = '/static/'

# Media
MEDIA_ROOT = str(ROOT_DIR('media'))
MEDIA_URL = env('MEDIA_URL', default='/media/')


REST_FRAMEWORK = {
    'COERCE_DECIMAL_TO_STRING': False,
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # 'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',  # LimitOffsetPagination
    'DEFAULT_PAGINATION_CLASS': 'app.core.pagination.StandardResultsSetPagination',  # LimitOffsetPagination
    'PAGE_SIZE': env.int("PAGE_SIZE", 20),
    'PAGINATE_BY_PARAM': 'page_size',  # Allow client to override, using `?page_size=xxx`.
    'MAX_PAGINATE_BY': 500,             # Maximum limit allowed when using `?page_size=xxx`.

    # 'DATE_INPUT_FORMATS': ['YYYY-MM-DD HH:MM:SS'],

    'EXCEPTION_HANDLER': 'app.core.exception_handler.api_exception_handler',
}


# Rest Auth - Change password
OLD_PASSWORD_FIELD_ENABLED = True

REST_AUTH_REGISTER_SERIALIZERS = {
    'REGISTER_SERIALIZER': 'app.users.serializers.RegisterSerializer'
}

REST_AUTH_SERIALIZERS = {
    'PASSWORD_RESET_SERIALIZER':
        'app.users.serializers.PasswordResetSerializer',
}

# Allow CORS requests from all domain
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = False

CORS_ALLOW_HEADERS = (
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
)

#  Celery
BROKER_URL = env('CELERY_BROKER_URL', default='django://')
CELERYD_MAX_TASKS_PER_CHILD = 100
CELERYD_TASK_SOFT_TIME_LIMIT = 2400  # 40 minutes
CELERY_RESULT_BACKEND = 'django-db'
CELERY_IGNORE_RESULT = False


# logging config
from .logging import LOGGING  # noqa

# swagger config
from .swagger import SWAGGER_SETTINGS  # noqa
AWS_DEFAULT_STORAGE_FOLDER = env('AWS_DEFAULT_STORAGE_FOLDER')