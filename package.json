{
    "name": "ProjectTemplate",
    "version": "0.0.1",
    "scripts": {
        "start": "./manage.py runserver 0.0.0.0:8000",
        "setup:all": "npm run setup:config && npm run setup:venv && setup:db",
        "setup:config": "(cp -r ./compose/.envs/.example ./compose/.envs/.local) && (cp .env.example ./config/settings/.env) && sed -i.bak s,DATABASE_URL.*,DATABASE_URL=postgres://goldfish:123456@postgres:5432/goldfish,g ./config/settings/.env",
        "setup:venv": "virtualenv venv && source ./venv/bin/activate && pip install -r requirements/local.txt",
        "setup:db": "./manage.py migrate",
        "docker:clean": "npm run docker:stop:dev:env && docker stop $(docker ps -aq) && docker rm $(docker ps -aq) && docker rmi $(docker images -q -f 'dangling=true') && docker volume rm $(docker volume ls -qf dangling=true)",
        "docker:build:env": "docker-compose build",
        "docker:start:env": "docker-compose up",
        "docker:build:dev:env": "docker-compose -f dev.yml build",
        "docker:start:dev:env": "docker-compose -f dev.yml up",
        "docker:stop:dev:env": "docker-compose -f dev.yml down",
        "terraform:deploy:production": "./hosting/scripts/generate-terraform-backend.js --vpc --iam --environment production && ./hosting/scripts/generate-terraform-backend.js --db --ec2 --sns --environment production",
        "terraform:destroy:production": "./hosting/scripts/generate-terraform-backend.js --sns --ec2 --db --destroy --environment production && ./hosting/scripts/generate-terraform-backend.js --iam --vpc --destroy --environment production"
    },
    "dependencies": {
        "aws-sdk": "^2.243.1",
        "serverless": "^1.27.3",
        "bluebird": "^3.5.1",
        "commander": "^2.15.1",
        "glob": "^7.1.3",
        "moment": "^2.24.0"
    },
    "devDependencies": {
        "node-cmd": "^3.0.0"
    }
}
