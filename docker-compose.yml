version: '3'

volumes:
  postgres_data:

services:
  postgres:
    build: 
      context: .
      dockerfile: compose/postgres/Dockerfile
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    env_file:
      - ./compose/.envs/.local/.postgres

  redis:
    image: redis:latest

  django:
    image: template-api
    build:
      context: .
      dockerfile: compose/django/Dockerfile
    command: /gunicorn.sh
    container_name: template-api-django
    depends_on:
      - postgres
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
    env_file:
      - ./compose/.envs/.local/.postgres
      - ./config/settings/.env
    volumes:
      - .:/app
    links:
      - postgres
      - redis

  celeryworker:
    image: template-api
    command: /start-celery-worker.sh
    container_name: template-api-celeryworker
    depends_on:
      - postgres
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
    env_file:
      - ./compose/.envs/.local/.postgres
      - ./config/settings/.env
    volumes:
      - .:/app
    links:
      - postgres
      - redis

  celerybeat:
    image: template-api
    command: /start-celery-beat.sh
    container_name: template-api-celerybeat
    depends_on:
      - postgres
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
    env_file:
      - ./compose/.envs/.local/.postgres
      - ./config/settings/.env
    volumes:
      - .:/root/projects/api
    links:
      - postgres
      - redis

  nginx:
    image: nginx
    volumes:
      - ./compose/nginx/conf.d:/etc/nginx/conf.d
      - .:/app
    links:
      - django
    ports:
      - 8000:80
